name: Call Baidu Qianfan API

on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 * * * *'  # 每小时运行一次

jobs:
  call-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Call API and update Notion
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          import requests
          import json
          import os
          from datetime import datetime

          # Load API key from config.json
          with open('config.json', 'r') as f:
              config = json.load(f)
              api_key = config['api_key']

          # Call Baidu Qianfan API
          url = "https://api.baidu.com/qianfan/v1/your-endpoint"  # 替换为实际 API 地址
          headers = {
              "Authorization": f"Bearer {api_key}"
          }
          response = requests.get(url, headers=headers)

          # Update Notion
          notion_url = "https://api.notion.com/v1/pages"
          headers = {
              "Authorization": f"Bearer {os.getenv('NOTION_API_KEY')}",
              "Content-Type": "application/json",
              "Notion-Version": "2022-06-28"
          }
          data = {
              "parent": {"database_id": os.getenv('NOTION_DATABASE_ID')},
              "properties": {
                  "调用时间": {"date": {"start": datetime.now().isoformat()}},
                  "调用结果": {"rich_text": [{"text": {"content": response.text}}]}
              }
          }
          requests.post(notion_url, headers=headers, json=data)
